name: food-express-keycloak-container

services:
  postgres:
    image: postgres:17.2
    container_name: keycloak-postgres
    volumes:
      - keycloak_postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
      POSTGRES_INITDB_ARGS: --auth-host=scram-sha-256 --auth-local=scram-sha-256
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "15432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - docker_keycloak_network

  keycloak:
    image: quay.io/keycloak/keycloak:26.1.2
    container_name: keycloak-server
    command: start-dev
    environment:
      KC_HOSTNAME: ${KC_HOSTNAME}
      KC_HOSTNAME_PORT: ${KC_HOSTNAME_PORT}
      KC_HTTP_ENABLED: ${KC_HTTP_ENABLED}
      KC_HEALTH_ENABLED: ${KC_HEALTH_ENABLED}
      KC_HOSTNAME_STRICT_HTTPS: ${KC_HOSTNAME_STRICT_HTTPS}
      KC_HOSTNAME_STRICT: ${KC_HOSTNAME_STRICT}
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KC_BOOTSTRAP_ADMIN_USERNAME}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KC_BOOTSTRAP_ADMIN_PASSWORD}
      KC_DB: ${KC_DB}
      KC_DB_URL: ${KC_DB_URL}
      KC_DB_USERNAME: ${KC_DB_USERNAME}
      KC_DB_PASSWORD: ${KC_DB_PASSWORD}
    ports:
      - "18080:8080"
    volumes:
      - ../../dist_keycloak:/opt/keycloak/providers/
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - docker_keycloak_network

volumes:
  keycloak_postgres: {}

networks:
  docker_keycloak_network:
    driver: bridge
